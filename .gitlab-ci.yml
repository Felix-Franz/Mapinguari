stages:
  - test
  - build-npm
  - build
  - deploy

include:
  - local: ".gitlab/pipelines/scanning.yml"

.npm-build:
  script:
    - npm run install-dev
    - npm run build
  artifacts:
    paths:
      - dist
      - README.md
      - package.json

.npm-set-names:
  script:
    - 'sed -i "s/\"name\": \".*\"/\"name\": \"$NAME\"/g" package.json'
    - 'sed -i "s/\"version\": \".*\"/\"version\": \"$NPM_TAG\"/g" package.json'

.upload-gitlab-npm-registry:
  script:
    - echo "@mapinguari:registry=https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/packages/npm/">.npmrc
    - echo "//gitlab.com/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}">>.npmrc
    - npm publish

.docker-build:
  # before_script:
  #   - docker buildx create --use
  script:
    # - docker buildx build --platform linux/amd64,linux/arm64,linux/arm -t image_tag .
    - docker build -t image_tag .

.upload-gitlab-docker-registry:
  script:
    - echo -n $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - docker tag image_tag $IMAGE_TAG
    - docker push $IMAGE_TAG

.snap-build:
  script:
    - 'sed -i "s/^version: .*/version: $SNAP_VERSION/g" snapcraft.yaml'
    - snapcraft
    - export SNAP_FILE=$(ls *.snap)


dev-build-npm:
  stage: build-npm
  needs: []
  only:
    - master
  image: node:15-slim
  script:
    - !reference [.npm-build, script]
    - export NAME="@mapinguari\/dev"
    - export NPM_TAG="0.0.0-$(date +"%Y-%m-%d-%H-%M-%S")--$CI_COMMIT_SHORT_SHA"
    - !reference [.npm-set-names, script]
    - !reference [.upload-gitlab-npm-registry, script]
  artifacts: !reference [.npm-build, artifacts]

dev-build-docker:
  stage: build
  needs: ["dev-build-npm"]
  only:
    - master
  image: docker:stable
  services:
    - docker:dind
  # before_script:
  #   - !reference [.docker-build, before_script]
  script:
    - !reference [.docker-build, script]
    - export IMAGE_TAG="$CI_REGISTRY_IMAGE/dev:$(date +"%Y-%m-%d-%H-%M-%S")--$CI_COMMIT_SHORT_SHA"
    - !reference [.upload-gitlab-docker-registry, script]
    - export IMAGE_TAG=$CI_REGISTRY_IMAGE/dev:latest
    - !reference [.upload-gitlab-docker-registry, script]

dev-build-snapcraft:
  stage: build
  needs: ["dev-build-npm"]
  only:
    - master
  image: snapcore/snapcraft
  script:
  script:
    - export SNAP_VERSION="$(date +"%Y-%m-%d-%H-%M-%S")--$CI_COMMIT_SHORT_SHA"
    - !reference [.snap-build, script]
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file $SNAP_FILE "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/dev/$SNAP_VERSION/$SNAP_FILE"'

dev-deploy:
  stage: deploy
  needs: ["dev-build-npm"]
  only:
    - master
  environment:
    name: Mapinguari
    url: https://mapinguari.rocks/
  image: woahbase/alpine-ssh
  variables:
    GIT_STRATEGY: none
  before_script:
    - mkdir ~/.ssh/
    - echo $UBERSPACE_HOST_KEYS > ~/.ssh/known_hosts
    - echo -e $UBERSPACE_FFELIX_SSH_PRIVATE > ~/.ssh/id_rsa
    - chmod 700 ~/.ssh/id_rsa
  script:
    - ssh $UBERSPACE_HOST_SSH "supervisorctl restart mapinguari"


stable-build-npm:
  stage: build-npm
  only:
    - tags
  image: node:15-slim
  script:
    - !reference [.npm-build, script]
    - export NAME="@mapinguari\/stable"
    - export NPM_TAG=$CI_COMMIT_TAG
    - !reference [.npm-set-names, script]
    - !reference [.upload-gitlab-npm-registry, script]
    - export NAME="mapinguari"
    - export NPM_TAG=$CI_COMMIT_TAG
    - !reference [.npm-set-names, script]
    #ToDo: Add deployment to npmjs.com
  artifacts: !reference [.npm-build, artifacts]

stable-build-docker:
  stage: build
  needs: ["stable-build-npm"]
  only:
    - tags
  image: docker:stable
  services:
    - docker:dind
  # before_script:
  #   - !reference [.docker-build, before_script]
  script:
    - !reference [.docker-build, script]
    - export IMAGE_TAG=$CI_REGISTRY_IMAGE/stable:$CI_COMMIT_TAG
    - !reference [.upload-gitlab-docker-registry, script]
    - export IMAGE_TAG=$CI_REGISTRY_IMAGE/stable:latest
    - !reference [.upload-gitlab-docker-registry, script]
    #ToDo: Add deployment to hub.docker.com
